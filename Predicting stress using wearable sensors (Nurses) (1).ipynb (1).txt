{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "b432ec4a",
   "metadata": {
    "papermill": {
     "duration": 0.013236,
     "end_time": "2023-08-11T05:44:13.954276",
     "exception": false,
     "start_time": "2023-08-11T05:44:13.941040",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# ** Importing Packages and Data**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "5f49f676",
   "metadata": {
    "_kg_hide-output": true,
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:14.039570Z",
     "iopub.status.busy": "2023-08-11T05:44:14.038840Z",
     "iopub.status.idle": "2023-08-11T05:44:31.007522Z",
     "shell.execute_reply": "2023-08-11T05:44:31.006187Z"
    },
    "papermill": {
     "duration": 16.987031,
     "end_time": "2023-08-11T05:44:31.010526",
     "exception": false,
     "start_time": "2023-08-11T05:44:14.023495",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "\n",
      "[notice] A new release of pip is available: 23.1.2 -> 23.2.1\n",
      "[notice] To update, run: python.exe -m pip install --upgrade pip\n"
     ]
    }
   ],
   "source": [
    "# Ignore warnings\n",
    "import warnings\n",
    "warnings.simplefilter(\"ignore\")\n",
    "\n",
    "# Frequently using packages\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "# Useful data handling package\n",
    "! pip install dfply -q\n",
    "from dfply import *\n",
    "\n",
    "# Data Analyses\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn import tree\n",
    "from sklearn.tree import plot_tree\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.metrics import accuracy_score\n",
    "from sklearn.metrics import r2_score\n",
    "from sklearn.metrics import mean_squared_error"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "41fce4c2",
   "metadata": {
    "papermill": {
     "duration": 0.013818,
     "end_time": "2023-08-11T05:44:31.038792",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.024974",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **2-2. Exploratory Data Analytics**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "dcf7a746",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:31.097339Z",
     "iopub.status.busy": "2023-08-11T05:44:31.096833Z",
     "iopub.status.idle": "2023-08-11T05:44:31.110085Z",
     "shell.execute_reply": "2023-08-11T05:44:31.109201Z"
    },
    "papermill": {
     "duration": 0.031162,
     "end_time": "2023-08-11T05:44:31.112311",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.081149",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df_stress = pd.read_csv('Stress_Nurse.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "65d2cbb3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:31.170008Z",
     "iopub.status.busy": "2023-08-11T05:44:31.168855Z",
     "iopub.status.idle": "2023-08-11T05:44:31.200733Z",
     "shell.execute_reply": "2023-08-11T05:44:31.199658Z"
    },
    "papermill": {
     "duration": 0.049339,
     "end_time": "2023-08-11T05:44:31.203170",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.153831",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Humidity</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>Step count</th>\n",
       "      <th>Stress Level</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>21.33</td>\n",
       "      <td>90.33</td>\n",
       "      <td>123</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21.41</td>\n",
       "      <td>90.41</td>\n",
       "      <td>93</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>27.12</td>\n",
       "      <td>96.12</td>\n",
       "      <td>196</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>27.64</td>\n",
       "      <td>96.64</td>\n",
       "      <td>177</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10.87</td>\n",
       "      <td>79.87</td>\n",
       "      <td>87</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>11.31</td>\n",
       "      <td>80.31</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>18.16</td>\n",
       "      <td>87.16</td>\n",
       "      <td>88</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>28.20</td>\n",
       "      <td>97.20</td>\n",
       "      <td>162</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>14.25</td>\n",
       "      <td>83.25</td>\n",
       "      <td>61</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>26.13</td>\n",
       "      <td>95.13</td>\n",
       "      <td>168</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Humidity  Temperature  Step count  Stress Level\n",
       "0     21.33        90.33         123             1\n",
       "1     21.41        90.41          93             1\n",
       "2     27.12        96.12         196             2\n",
       "3     27.64        96.64         177             2\n",
       "4     10.87        79.87          87             0\n",
       "5     11.31        80.31          40             0\n",
       "6     18.16        87.16          88             1\n",
       "7     28.20        97.20         162             2\n",
       "8     14.25        83.25          61             0\n",
       "9     26.13        95.13         168             2"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_stress.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "b5b0e040",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:31.234389Z",
     "iopub.status.busy": "2023-08-11T05:44:31.233971Z",
     "iopub.status.idle": "2023-08-11T05:44:31.240790Z",
     "shell.execute_reply": "2023-08-11T05:44:31.239739Z"
    },
    "papermill": {
     "duration": 0.025283,
     "end_time": "2023-08-11T05:44:31.243156",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.217873",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "2001"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(df_stress)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "6a6d8ecc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:31.303498Z",
     "iopub.status.busy": "2023-08-11T05:44:31.303078Z",
     "iopub.status.idle": "2023-08-11T05:44:31.317046Z",
     "shell.execute_reply": "2023-08-11T05:44:31.315950Z"
    },
    "papermill": {
     "duration": 0.03257,
     "end_time": "2023-08-11T05:44:31.319406",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.286836",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Humidity</th>\n",
       "      <th>Temperature</th>\n",
       "      <th>Step_count</th>\n",
       "      <th>Stress_Level</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>21.33</td>\n",
       "      <td>90.33</td>\n",
       "      <td>123</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>21.41</td>\n",
       "      <td>90.41</td>\n",
       "      <td>93</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>27.12</td>\n",
       "      <td>96.12</td>\n",
       "      <td>196</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>27.64</td>\n",
       "      <td>96.64</td>\n",
       "      <td>177</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>10.87</td>\n",
       "      <td>79.87</td>\n",
       "      <td>87</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Humidity  Temperature  Step_count  Stress_Level\n",
       "0     21.33        90.33         123             1\n",
       "1     21.41        90.41          93             1\n",
       "2     27.12        96.12         196             2\n",
       "3     27.64        96.64         177             2\n",
       "4     10.87        79.87          87             0"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_stress = df_stress.rename(columns = {'Step count': 'Step_count', 'Stress Level': 'Stress_Level'})\n",
    "df_stress.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a7f8ce5b",
   "metadata": {
    "papermill": {
     "duration": 0.01456,
     "end_time": "2023-08-11T05:44:31.349088",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.334528",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## **Data Description**\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2476f380",
   "metadata": {
    "papermill": {
     "duration": 0.014565,
     "end_time": "2023-08-11T05:44:31.378390",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.363825",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### **Humidity**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "36a3c288",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:31.409828Z",
     "iopub.status.busy": "2023-08-11T05:44:31.409194Z",
     "iopub.status.idle": "2023-08-11T05:44:31.465317Z",
     "shell.execute_reply": "2023-08-11T05:44:31.464198Z"
    },
    "papermill": {
     "duration": 0.074548,
     "end_time": "2023-08-11T05:44:31.467577",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.393029",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Stress_Level</th>\n",
       "      <th>Humidity_size</th>\n",
       "      <th>Humidity_min</th>\n",
       "      <th>Humidity_max</th>\n",
       "      <th>Humidity_mean</th>\n",
       "      <th>Humidity_sd</th>\n",
       "      <th>Humidity_cil</th>\n",
       "      <th>Humidity_cih</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>10.00</td>\n",
       "      <td>15.0</td>\n",
       "      <td>12.500</td>\n",
       "      <td>1.446260</td>\n",
       "      <td>9.665331</td>\n",
       "      <td>15.334669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>10.00</td>\n",
       "      <td>15.0</td>\n",
       "      <td>12.500</td>\n",
       "      <td>1.446260</td>\n",
       "      <td>9.665331</td>\n",
       "      <td>15.334669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>10.00</td>\n",
       "      <td>15.0</td>\n",
       "      <td>12.500</td>\n",
       "      <td>1.446260</td>\n",
       "      <td>9.665331</td>\n",
       "      <td>15.334669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>10.00</td>\n",
       "      <td>15.0</td>\n",
       "      <td>12.500</td>\n",
       "      <td>1.446260</td>\n",
       "      <td>9.665331</td>\n",
       "      <td>15.334669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>10.00</td>\n",
       "      <td>15.0</td>\n",
       "      <td>12.500</td>\n",
       "      <td>1.446260</td>\n",
       "      <td>9.665331</td>\n",
       "      <td>15.334669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>15.01</td>\n",
       "      <td>22.9</td>\n",
       "      <td>18.955</td>\n",
       "      <td>2.280532</td>\n",
       "      <td>14.485158</td>\n",
       "      <td>23.424842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>15.01</td>\n",
       "      <td>22.9</td>\n",
       "      <td>18.955</td>\n",
       "      <td>2.280532</td>\n",
       "      <td>14.485158</td>\n",
       "      <td>23.424842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>15.01</td>\n",
       "      <td>22.9</td>\n",
       "      <td>18.955</td>\n",
       "      <td>2.280532</td>\n",
       "      <td>14.485158</td>\n",
       "      <td>23.424842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>15.01</td>\n",
       "      <td>22.9</td>\n",
       "      <td>18.955</td>\n",
       "      <td>2.280532</td>\n",
       "      <td>14.485158</td>\n",
       "      <td>23.424842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>15.01</td>\n",
       "      <td>22.9</td>\n",
       "      <td>18.955</td>\n",
       "      <td>2.280532</td>\n",
       "      <td>14.485158</td>\n",
       "      <td>23.424842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>22.91</td>\n",
       "      <td>30.0</td>\n",
       "      <td>26.455</td>\n",
       "      <td>2.049591</td>\n",
       "      <td>22.437801</td>\n",
       "      <td>30.472199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>22.91</td>\n",
       "      <td>30.0</td>\n",
       "      <td>26.455</td>\n",
       "      <td>2.049591</td>\n",
       "      <td>22.437801</td>\n",
       "      <td>30.472199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>22.91</td>\n",
       "      <td>30.0</td>\n",
       "      <td>26.455</td>\n",
       "      <td>2.049591</td>\n",
       "      <td>22.437801</td>\n",
       "      <td>30.472199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>22.91</td>\n",
       "      <td>30.0</td>\n",
       "      <td>26.455</td>\n",
       "      <td>2.049591</td>\n",
       "      <td>22.437801</td>\n",
       "      <td>30.472199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>22.91</td>\n",
       "      <td>30.0</td>\n",
       "      <td>26.455</td>\n",
       "      <td>2.049591</td>\n",
       "      <td>22.437801</td>\n",
       "      <td>30.472199</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Stress_Level  Humidity_size  Humidity_min  Humidity_max  Humidity_mean  \\\n",
       "4              0            501         10.00          15.0         12.500   \n",
       "5              0            501         10.00          15.0         12.500   \n",
       "8              0            501         10.00          15.0         12.500   \n",
       "22             0            501         10.00          15.0         12.500   \n",
       "37             0            501         10.00          15.0         12.500   \n",
       "0              1            790         15.01          22.9         18.955   \n",
       "1              1            790         15.01          22.9         18.955   \n",
       "6              1            790         15.01          22.9         18.955   \n",
       "11             1            790         15.01          22.9         18.955   \n",
       "13             1            790         15.01          22.9         18.955   \n",
       "2              2            710         22.91          30.0         26.455   \n",
       "3              2            710         22.91          30.0         26.455   \n",
       "7              2            710         22.91          30.0         26.455   \n",
       "9              2            710         22.91          30.0         26.455   \n",
       "10             2            710         22.91          30.0         26.455   \n",
       "\n",
       "    Humidity_sd  Humidity_cil  Humidity_cih  \n",
       "4      1.446260      9.665331     15.334669  \n",
       "5      1.446260      9.665331     15.334669  \n",
       "8      1.446260      9.665331     15.334669  \n",
       "22     1.446260      9.665331     15.334669  \n",
       "37     1.446260      9.665331     15.334669  \n",
       "0      2.280532     14.485158     23.424842  \n",
       "1      2.280532     14.485158     23.424842  \n",
       "6      2.280532     14.485158     23.424842  \n",
       "11     2.280532     14.485158     23.424842  \n",
       "13     2.280532     14.485158     23.424842  \n",
       "2      2.049591     22.437801     30.472199  \n",
       "3      2.049591     22.437801     30.472199  \n",
       "7      2.049591     22.437801     30.472199  \n",
       "9      2.049591     22.437801     30.472199  \n",
       "10     2.049591     22.437801     30.472199  "
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_stress >> group_by(X.Stress_Level) >> mutate(\n",
    "    Humidity_size = X.Humidity.count(),\n",
    "    Humidity_min = np.min(X.Humidity),\n",
    "    Humidity_max = np.max(X.Humidity),\n",
    "    Humidity_mean = np.mean(X.Humidity),\n",
    "    Humidity_sd = np.std(X.Humidity),\n",
    "    Humidity_cil = np.mean(X.Humidity) - 1.96 * np.std(X.Humidity),\n",
    "    Humidity_cih = np.mean(X.Humidity) + 1.96 * np.std(X.Humidity)\n",
    ") >> head(5) >> select(\n",
    "    X.Stress_Level,\n",
    "    X.Humidity_size, X.Humidity_min, X.Humidity_max,\n",
    "    X.Humidity_mean, X.Humidity_sd, X.Humidity_cil, X.Humidity_cih\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "98300a8d",
   "metadata": {
    "papermill": {
     "duration": 0.014602,
     "end_time": "2023-08-11T05:44:31.527166",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.512564",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### **Temperature**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "d3a28edd",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:31.559257Z",
     "iopub.status.busy": "2023-08-11T05:44:31.558574Z",
     "iopub.status.idle": "2023-08-11T05:44:31.605041Z",
     "shell.execute_reply": "2023-08-11T05:44:31.603857Z"
    },
    "papermill": {
     "duration": 0.065384,
     "end_time": "2023-08-11T05:44:31.607460",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.542076",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Stress_Level</th>\n",
       "      <th>Temperature_size</th>\n",
       "      <th>Temperature_min</th>\n",
       "      <th>Temperature_max</th>\n",
       "      <th>Temperature_mean</th>\n",
       "      <th>Temperature_sd</th>\n",
       "      <th>Temperature_cil</th>\n",
       "      <th>Temperature_cih</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>79.00</td>\n",
       "      <td>84.0</td>\n",
       "      <td>81.500</td>\n",
       "      <td>1.446260</td>\n",
       "      <td>78.665331</td>\n",
       "      <td>84.334669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>79.00</td>\n",
       "      <td>84.0</td>\n",
       "      <td>81.500</td>\n",
       "      <td>1.446260</td>\n",
       "      <td>78.665331</td>\n",
       "      <td>84.334669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>79.00</td>\n",
       "      <td>84.0</td>\n",
       "      <td>81.500</td>\n",
       "      <td>1.446260</td>\n",
       "      <td>78.665331</td>\n",
       "      <td>84.334669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>79.00</td>\n",
       "      <td>84.0</td>\n",
       "      <td>81.500</td>\n",
       "      <td>1.446260</td>\n",
       "      <td>78.665331</td>\n",
       "      <td>84.334669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>79.00</td>\n",
       "      <td>84.0</td>\n",
       "      <td>81.500</td>\n",
       "      <td>1.446260</td>\n",
       "      <td>78.665331</td>\n",
       "      <td>84.334669</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>84.01</td>\n",
       "      <td>91.9</td>\n",
       "      <td>87.955</td>\n",
       "      <td>2.280532</td>\n",
       "      <td>83.485158</td>\n",
       "      <td>92.424842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>84.01</td>\n",
       "      <td>91.9</td>\n",
       "      <td>87.955</td>\n",
       "      <td>2.280532</td>\n",
       "      <td>83.485158</td>\n",
       "      <td>92.424842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>84.01</td>\n",
       "      <td>91.9</td>\n",
       "      <td>87.955</td>\n",
       "      <td>2.280532</td>\n",
       "      <td>83.485158</td>\n",
       "      <td>92.424842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>84.01</td>\n",
       "      <td>91.9</td>\n",
       "      <td>87.955</td>\n",
       "      <td>2.280532</td>\n",
       "      <td>83.485158</td>\n",
       "      <td>92.424842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>84.01</td>\n",
       "      <td>91.9</td>\n",
       "      <td>87.955</td>\n",
       "      <td>2.280532</td>\n",
       "      <td>83.485158</td>\n",
       "      <td>92.424842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>91.91</td>\n",
       "      <td>99.0</td>\n",
       "      <td>95.455</td>\n",
       "      <td>2.049591</td>\n",
       "      <td>91.437801</td>\n",
       "      <td>99.472199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>91.91</td>\n",
       "      <td>99.0</td>\n",
       "      <td>95.455</td>\n",
       "      <td>2.049591</td>\n",
       "      <td>91.437801</td>\n",
       "      <td>99.472199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>91.91</td>\n",
       "      <td>99.0</td>\n",
       "      <td>95.455</td>\n",
       "      <td>2.049591</td>\n",
       "      <td>91.437801</td>\n",
       "      <td>99.472199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>91.91</td>\n",
       "      <td>99.0</td>\n",
       "      <td>95.455</td>\n",
       "      <td>2.049591</td>\n",
       "      <td>91.437801</td>\n",
       "      <td>99.472199</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>91.91</td>\n",
       "      <td>99.0</td>\n",
       "      <td>95.455</td>\n",
       "      <td>2.049591</td>\n",
       "      <td>91.437801</td>\n",
       "      <td>99.472199</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Stress_Level  Temperature_size  Temperature_min  Temperature_max  \\\n",
       "4              0               501            79.00             84.0   \n",
       "5              0               501            79.00             84.0   \n",
       "8              0               501            79.00             84.0   \n",
       "22             0               501            79.00             84.0   \n",
       "37             0               501            79.00             84.0   \n",
       "0              1               790            84.01             91.9   \n",
       "1              1               790            84.01             91.9   \n",
       "6              1               790            84.01             91.9   \n",
       "11             1               790            84.01             91.9   \n",
       "13             1               790            84.01             91.9   \n",
       "2              2               710            91.91             99.0   \n",
       "3              2               710            91.91             99.0   \n",
       "7              2               710            91.91             99.0   \n",
       "9              2               710            91.91             99.0   \n",
       "10             2               710            91.91             99.0   \n",
       "\n",
       "    Temperature_mean  Temperature_sd  Temperature_cil  Temperature_cih  \n",
       "4             81.500        1.446260        78.665331        84.334669  \n",
       "5             81.500        1.446260        78.665331        84.334669  \n",
       "8             81.500        1.446260        78.665331        84.334669  \n",
       "22            81.500        1.446260        78.665331        84.334669  \n",
       "37            81.500        1.446260        78.665331        84.334669  \n",
       "0             87.955        2.280532        83.485158        92.424842  \n",
       "1             87.955        2.280532        83.485158        92.424842  \n",
       "6             87.955        2.280532        83.485158        92.424842  \n",
       "11            87.955        2.280532        83.485158        92.424842  \n",
       "13            87.955        2.280532        83.485158        92.424842  \n",
       "2             95.455        2.049591        91.437801        99.472199  \n",
       "3             95.455        2.049591        91.437801        99.472199  \n",
       "7             95.455        2.049591        91.437801        99.472199  \n",
       "9             95.455        2.049591        91.437801        99.472199  \n",
       "10            95.455        2.049591        91.437801        99.472199  "
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_stress >> group_by(X.Stress_Level) >> mutate(\n",
    "    Temperature_size = X.Temperature.count(),\n",
    "    Temperature_min = np.min(X.Temperature),\n",
    "    Temperature_max = np.max(X.Temperature),\n",
    "    Temperature_mean = np.mean(X.Temperature),\n",
    "    Temperature_sd = np.std(X.Temperature),\n",
    "    Temperature_cil = np.mean(X.Temperature) - 1.96 * np.std(X.Temperature),\n",
    "    Temperature_cih = np.mean(X.Temperature) + 1.96 * np.std(X.Temperature)\n",
    ") >> head(5) >> select(\n",
    "    X.Stress_Level,\n",
    "    X.Temperature_size, X.Temperature_min, X.Temperature_max,\n",
    "    X.Temperature_mean, X.Temperature_sd, X.Temperature_cil, X.Temperature_cih\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2a53959",
   "metadata": {
    "papermill": {
     "duration": 0.01494,
     "end_time": "2023-08-11T05:44:31.667920",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.652980",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### **Step count**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "06522060",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:31.700690Z",
     "iopub.status.busy": "2023-08-11T05:44:31.700032Z",
     "iopub.status.idle": "2023-08-11T05:44:31.743785Z",
     "shell.execute_reply": "2023-08-11T05:44:31.742686Z"
    },
    "papermill": {
     "duration": 0.063196,
     "end_time": "2023-08-11T05:44:31.746310",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.683114",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Stress_Level</th>\n",
       "      <th>Stepcount_size</th>\n",
       "      <th>Stepcount_min</th>\n",
       "      <th>Stepcount_max</th>\n",
       "      <th>Stepcount_mean</th>\n",
       "      <th>Stepcount_sd</th>\n",
       "      <th>Stepcount_cil</th>\n",
       "      <th>Stepcount_cih</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>0</td>\n",
       "      <td>90</td>\n",
       "      <td>42.934132</td>\n",
       "      <td>26.173337</td>\n",
       "      <td>-8.365609</td>\n",
       "      <td>94.233872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>0</td>\n",
       "      <td>90</td>\n",
       "      <td>42.934132</td>\n",
       "      <td>26.173337</td>\n",
       "      <td>-8.365609</td>\n",
       "      <td>94.233872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>0</td>\n",
       "      <td>90</td>\n",
       "      <td>42.934132</td>\n",
       "      <td>26.173337</td>\n",
       "      <td>-8.365609</td>\n",
       "      <td>94.233872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>0</td>\n",
       "      <td>90</td>\n",
       "      <td>42.934132</td>\n",
       "      <td>26.173337</td>\n",
       "      <td>-8.365609</td>\n",
       "      <td>94.233872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>0</td>\n",
       "      <td>501</td>\n",
       "      <td>0</td>\n",
       "      <td>90</td>\n",
       "      <td>42.934132</td>\n",
       "      <td>26.173337</td>\n",
       "      <td>-8.365609</td>\n",
       "      <td>94.233872</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>0</td>\n",
       "      <td>129</td>\n",
       "      <td>78.130380</td>\n",
       "      <td>37.653308</td>\n",
       "      <td>4.329896</td>\n",
       "      <td>151.930864</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>0</td>\n",
       "      <td>129</td>\n",
       "      <td>78.130380</td>\n",
       "      <td>37.653308</td>\n",
       "      <td>4.329896</td>\n",
       "      <td>151.930864</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>0</td>\n",
       "      <td>129</td>\n",
       "      <td>78.130380</td>\n",
       "      <td>37.653308</td>\n",
       "      <td>4.329896</td>\n",
       "      <td>151.930864</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>0</td>\n",
       "      <td>129</td>\n",
       "      <td>78.130380</td>\n",
       "      <td>37.653308</td>\n",
       "      <td>4.329896</td>\n",
       "      <td>151.930864</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>1</td>\n",
       "      <td>790</td>\n",
       "      <td>0</td>\n",
       "      <td>129</td>\n",
       "      <td>78.130380</td>\n",
       "      <td>37.653308</td>\n",
       "      <td>4.329896</td>\n",
       "      <td>151.930864</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>130</td>\n",
       "      <td>200</td>\n",
       "      <td>165.000000</td>\n",
       "      <td>20.493902</td>\n",
       "      <td>124.831953</td>\n",
       "      <td>205.168047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>130</td>\n",
       "      <td>200</td>\n",
       "      <td>165.000000</td>\n",
       "      <td>20.493902</td>\n",
       "      <td>124.831953</td>\n",
       "      <td>205.168047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>130</td>\n",
       "      <td>200</td>\n",
       "      <td>165.000000</td>\n",
       "      <td>20.493902</td>\n",
       "      <td>124.831953</td>\n",
       "      <td>205.168047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>130</td>\n",
       "      <td>200</td>\n",
       "      <td>165.000000</td>\n",
       "      <td>20.493902</td>\n",
       "      <td>124.831953</td>\n",
       "      <td>205.168047</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2</td>\n",
       "      <td>710</td>\n",
       "      <td>130</td>\n",
       "      <td>200</td>\n",
       "      <td>165.000000</td>\n",
       "      <td>20.493902</td>\n",
       "      <td>124.831953</td>\n",
       "      <td>205.168047</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Stress_Level  Stepcount_size  Stepcount_min  Stepcount_max  \\\n",
       "4              0             501              0             90   \n",
       "5              0             501              0             90   \n",
       "8              0             501              0             90   \n",
       "22             0             501              0             90   \n",
       "37             0             501              0             90   \n",
       "0              1             790              0            129   \n",
       "1              1             790              0            129   \n",
       "6              1             790              0            129   \n",
       "11             1             790              0            129   \n",
       "13             1             790              0            129   \n",
       "2              2             710            130            200   \n",
       "3              2             710            130            200   \n",
       "7              2             710            130            200   \n",
       "9              2             710            130            200   \n",
       "10             2             710            130            200   \n",
       "\n",
       "    Stepcount_mean  Stepcount_sd  Stepcount_cil  Stepcount_cih  \n",
       "4        42.934132     26.173337      -8.365609      94.233872  \n",
       "5        42.934132     26.173337      -8.365609      94.233872  \n",
       "8        42.934132     26.173337      -8.365609      94.233872  \n",
       "22       42.934132     26.173337      -8.365609      94.233872  \n",
       "37       42.934132     26.173337      -8.365609      94.233872  \n",
       "0        78.130380     37.653308       4.329896     151.930864  \n",
       "1        78.130380     37.653308       4.329896     151.930864  \n",
       "6        78.130380     37.653308       4.329896     151.930864  \n",
       "11       78.130380     37.653308       4.329896     151.930864  \n",
       "13       78.130380     37.653308       4.329896     151.930864  \n",
       "2       165.000000     20.493902     124.831953     205.168047  \n",
       "3       165.000000     20.493902     124.831953     205.168047  \n",
       "7       165.000000     20.493902     124.831953     205.168047  \n",
       "9       165.000000     20.493902     124.831953     205.168047  \n",
       "10      165.000000     20.493902     124.831953     205.168047  "
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_stress >> group_by(X.Stress_Level) >> mutate(\n",
    "    Stepcount_size = X.Step_count.count(),\n",
    "    Stepcount_min = np.min(X.Step_count),\n",
    "    Stepcount_max = np.max(X.Step_count),\n",
    "    Stepcount_mean = np.mean(X.Step_count),\n",
    "    Stepcount_sd = np.std(X.Step_count),\n",
    "    Stepcount_cil = np.mean(X.Step_count) - 1.96 * np.std(X.Step_count),\n",
    "    Stepcount_cih = np.mean(X.Step_count) + 1.96 * np.std(X.Step_count)\n",
    ") >> head(5) >> select(\n",
    "    X.Stress_Level,\n",
    "    X.Stepcount_size, X.Stepcount_min, X.Stepcount_max,\n",
    "    X.Stepcount_mean, X.Stepcount_sd, X.Stepcount_cil, X.Stepcount_cih\n",
    ")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "50ab85a9",
   "metadata": {
    "papermill": {
     "duration": 0.015154,
     "end_time": "2023-08-11T05:44:31.807645",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.792491",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## **Scatter Plot and Boxplot**\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "53b6df0d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:31.839993Z",
     "iopub.status.busy": "2023-08-11T05:44:31.839552Z",
     "iopub.status.idle": "2023-08-11T05:44:32.609373Z",
     "shell.execute_reply": "2023-08-11T05:44:32.608264Z"
    },
    "papermill": {
     "duration": 0.78902,
     "end_time": "2023-08-11T05:44:32.612064",
     "exception": false,
     "start_time": "2023-08-11T05:44:31.823044",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(ncols=2)\n",
    "sns.scatterplot(data=df_stress,\n",
    "                x=\"Stress_Level\", y=\"Step_count\", hue=df_stress.Stress_Level.tolist(),\n",
    "                ax=axs[0])\n",
    "sns.boxplot(data=df_stress,\n",
    "            x=\"Stress_Level\", y=\"Step_count\", hue=df_stress.Stress_Level.tolist(),\n",
    "            ax=axs[1])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "a89c03be",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:32.710479Z",
     "iopub.status.busy": "2023-08-11T05:44:32.710074Z",
     "iopub.status.idle": "2023-08-11T05:44:33.437900Z",
     "shell.execute_reply": "2023-08-11T05:44:33.436743Z"
    },
    "papermill": {
     "duration": 0.748343,
     "end_time": "2023-08-11T05:44:33.440923",
     "exception": false,
     "start_time": "2023-08-11T05:44:32.692580",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(ncols=2)\n",
    "sns.scatterplot(data=df_stress,\n",
    "                x=\"Stress_Level\", y=\"Temperature\", hue=df_stress.Stress_Level.tolist(),\n",
    "                ax=axs[0])\n",
    "sns.boxplot(data=df_stress,\n",
    "            x=\"Stress_Level\", y=\"Temperature\", hue=df_stress.Stress_Level.tolist(),\n",
    "            ax=axs[1])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "3f443cdf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:33.478003Z",
     "iopub.status.busy": "2023-08-11T05:44:33.477617Z",
     "iopub.status.idle": "2023-08-11T05:44:34.211030Z",
     "shell.execute_reply": "2023-08-11T05:44:34.209877Z"
    },
    "papermill": {
     "duration": 0.755323,
     "end_time": "2023-08-11T05:44:34.213753",
     "exception": false,
     "start_time": "2023-08-11T05:44:33.458430",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, axs = plt.subplots(ncols=2)\n",
    "sns.scatterplot(data=df_stress,\n",
    "                x=\"Stress_Level\", y=\"Humidity\", hue=df_stress.Stress_Level.tolist(),\n",
    "                ax=axs[0])\n",
    "sns.boxplot(data=df_stress,\n",
    "            x=\"Stress_Level\", y=\"Humidity\", hue=df_stress.Stress_Level.tolist(),\n",
    "            ax=axs[1])\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0042c51e",
   "metadata": {
    "papermill": {
     "duration": 0.017021,
     "end_time": "2023-08-11T05:44:34.248683",
     "exception": false,
     "start_time": "2023-08-11T05:44:34.231662",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# Analyses\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1be80ed5",
   "metadata": {
    "papermill": {
     "duration": 0.017015,
     "end_time": "2023-08-11T05:44:34.317871",
     "exception": false,
     "start_time": "2023-08-11T05:44:34.300856",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## Data Preparation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "061df1e0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:34.355202Z",
     "iopub.status.busy": "2023-08-11T05:44:34.354785Z",
     "iopub.status.idle": "2023-08-11T05:44:34.364923Z",
     "shell.execute_reply": "2023-08-11T05:44:34.363998Z"
    },
    "papermill": {
     "duration": 0.031782,
     "end_time": "2023-08-11T05:44:34.367111",
     "exception": false,
     "start_time": "2023-08-11T05:44:34.335329",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "df_y = df_stress['Stress_Level']\n",
    "df_x = df_stress[df_stress.columns[df_stress.columns != 'Stress_Level']]\n",
    "train_x, test_x, train_y, test_y = train_test_split(df_x, df_y, random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "749f8419",
   "metadata": {
    "_kg_hide-output": true,
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:34.403775Z",
     "iopub.status.busy": "2023-08-11T05:44:34.403013Z",
     "iopub.status.idle": "2023-08-11T05:44:34.413794Z",
     "shell.execute_reply": "2023-08-11T05:44:34.412961Z"
    },
    "papermill": {
     "duration": 0.031715,
     "end_time": "2023-08-11T05:44:34.416273",
     "exception": false,
     "start_time": "2023-08-11T05:44:34.384558",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method DataFrame.count of       Humidity  Temperature  Step_count\n",
       "548      15.68        84.68          22\n",
       "937      23.37        92.37         176\n",
       "845      15.17        84.17          62\n",
       "1608     19.88        88.88          92\n",
       "1940     10.50        79.50          50\n",
       "...        ...          ...         ...\n",
       "1130     10.73        79.73          73\n",
       "1294     22.67        91.67         113\n",
       "860      25.38        94.38         164\n",
       "1459     22.68        91.68         114\n",
       "1126     12.92        81.92          19\n",
       "\n",
       "[1500 rows x 3 columns]>"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_x.count"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "5ec99676",
   "metadata": {
    "_kg_hide-output": true,
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:34.453294Z",
     "iopub.status.busy": "2023-08-11T05:44:34.452865Z",
     "iopub.status.idle": "2023-08-11T05:44:34.464358Z",
     "shell.execute_reply": "2023-08-11T05:44:34.463213Z"
    },
    "papermill": {
     "duration": 0.032855,
     "end_time": "2023-08-11T05:44:34.466707",
     "exception": false,
     "start_time": "2023-08-11T05:44:34.433852",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<bound method DataFrame.count of       Humidity  Temperature  Step_count\n",
       "1394     11.57        80.57          66\n",
       "353      21.63        90.63         115\n",
       "1334     16.12        85.12          66\n",
       "906      15.32        84.32          77\n",
       "1290     11.65        80.65          74\n",
       "...        ...          ...         ...\n",
       "1357     12.47        81.47          65\n",
       "408      28.63        97.63         134\n",
       "1615     28.74        97.74         145\n",
       "694      14.68        83.68          13\n",
       "1649     27.28        96.28         141\n",
       "\n",
       "[501 rows x 3 columns]>"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "test_x.count"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "70cf86a8",
   "metadata": {
    "papermill": {
     "duration": 0.017223,
     "end_time": "2023-08-11T05:44:34.501560",
     "exception": false,
     "start_time": "2023-08-11T05:44:34.484337",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **3-1. Decision Tree**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "d8793d73",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:34.538412Z",
     "iopub.status.busy": "2023-08-11T05:44:34.537890Z",
     "iopub.status.idle": "2023-08-11T05:44:34.555772Z",
     "shell.execute_reply": "2023-08-11T05:44:34.554399Z"
    },
    "papermill": {
     "duration": 0.039271,
     "end_time": "2023-08-11T05:44:34.558212",
     "exception": false,
     "start_time": "2023-08-11T05:44:34.518941",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is 100.0%.\n"
     ]
    }
   ],
   "source": [
    "# Building a learning model\n",
    "model_dt = tree.DecisionTreeClassifier(max_depth=3, random_state=42)\n",
    "\n",
    "# Setting the test data for learning\n",
    "model_dt.fit(train_x, train_y)\n",
    "\n",
    "# Conducting inference\n",
    "test_dt = model_dt.predict(test_x)\n",
    "\n",
    "# Calculating the accuracy\n",
    "score_dt = model_dt.score(test_x, test_y)\n",
    "print(f'Accuracy is {score_dt * 100}%.')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "37f7fd88",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:34.595403Z",
     "iopub.status.busy": "2023-08-11T05:44:34.595024Z",
     "iopub.status.idle": "2023-08-11T05:44:35.000426Z",
     "shell.execute_reply": "2023-08-11T05:44:34.999461Z"
    },
    "papermill": {
     "duration": 0.427666,
     "end_time": "2023-08-11T05:44:35.003556",
     "exception": false,
     "start_time": "2023-08-11T05:44:34.575890",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[Text(0.6, 0.8333333333333334, 'Temperature <= 91.905\\ngini = 0.655\\nsamples = 1500\\nvalue = [373, 600, 527]\\nclass = y[1]'),\n",
       " Text(0.4, 0.5, 'Temperature <= 84.005\\ngini = 0.473\\nsamples = 973\\nvalue = [373, 600, 0]\\nclass = y[1]'),\n",
       " Text(0.2, 0.16666666666666666, 'gini = 0.0\\nsamples = 373\\nvalue = [373, 0, 0]\\nclass = y[0]'),\n",
       " Text(0.6, 0.16666666666666666, 'gini = 0.0\\nsamples = 600\\nvalue = [0, 600, 0]\\nclass = y[1]'),\n",
       " Text(0.8, 0.5, 'gini = 0.0\\nsamples = 527\\nvalue = [0, 0, 527]\\nclass = y[2]')]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_tree(model_dt, feature_names=train_x.columns, class_names=True, filled=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "498e2c85",
   "metadata": {
    "papermill": {
     "duration": 0.0187,
     "end_time": "2023-08-11T05:44:35.082129",
     "exception": false,
     "start_time": "2023-08-11T05:44:35.063429",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **3-2. Random Forest**"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2bc10135",
   "metadata": {
    "papermill": {
     "duration": 0.018549,
     "end_time": "2023-08-11T05:44:35.120003",
     "exception": false,
     "start_time": "2023-08-11T05:44:35.101454",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## **Classification**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "31900061",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:35.160148Z",
     "iopub.status.busy": "2023-08-11T05:44:35.159716Z",
     "iopub.status.idle": "2023-08-11T05:44:35.448947Z",
     "shell.execute_reply": "2023-08-11T05:44:35.447528Z"
    },
    "papermill": {
     "duration": 0.312197,
     "end_time": "2023-08-11T05:44:35.451568",
     "exception": false,
     "start_time": "2023-08-11T05:44:35.139371",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is 100.0%.\n"
     ]
    }
   ],
   "source": [
    "# Building a leaening model\n",
    "model_rf = RandomForestClassifier(max_depth=3, random_state=42)\n",
    "\n",
    "# Setting the test data for learning\n",
    "model_rf.fit(train_x, train_y)\n",
    "\n",
    "# Conduct inference\n",
    "test = model_rf.predict(test_x)\n",
    "\n",
    "# Calculating the accuracy\n",
    "score_rfc = accuracy_score(test_y, test)\n",
    "print(f'Accuracy is {score_rfc * 100}%.')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e27db5a6",
   "metadata": {
    "papermill": {
     "duration": 0.018883,
     "end_time": "2023-08-11T05:44:35.490089",
     "exception": false,
     "start_time": "2023-08-11T05:44:35.471206",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "## **Regression**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "8fc493e7",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:35.530404Z",
     "iopub.status.busy": "2023-08-11T05:44:35.530015Z",
     "iopub.status.idle": "2023-08-11T05:44:35.555755Z",
     "shell.execute_reply": "2023-08-11T05:44:35.554507Z"
    },
    "papermill": {
     "duration": 0.049099,
     "end_time": "2023-08-11T05:44:35.558178",
     "exception": false,
     "start_time": "2023-08-11T05:44:35.509079",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Accuracy is 100.0%.\n"
     ]
    }
   ],
   "source": [
    "score_reg = model_rf.score(test_x, test_y)\n",
    "print(f'Accuracy is {score_reg * 100}%.')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "08c4d6fe",
   "metadata": {
    "papermill": {
     "duration": 0.01878,
     "end_time": "2023-08-11T05:44:35.596004",
     "exception": false,
     "start_time": "2023-08-11T05:44:35.577224",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### **RMSE and R2 Evaluation**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "b7ed026e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:35.636415Z",
     "iopub.status.busy": "2023-08-11T05:44:35.635989Z",
     "iopub.status.idle": "2023-08-11T05:44:35.689729Z",
     "shell.execute_reply": "2023-08-11T05:44:35.688379Z"
    },
    "papermill": {
     "duration": 0.077009,
     "end_time": "2023-08-11T05:44:35.692196",
     "exception": false,
     "start_time": "2023-08-11T05:44:35.615187",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "RMSE Train: 0.00, Test: 0.00\n",
      "R^2 Train: 1.00, Test: 1.00\n"
     ]
    }
   ],
   "source": [
    "# Predicting train_x\n",
    "train_y_pred = model_rf.predict(train_x)\n",
    "\n",
    "# Predict test_y\n",
    "test_y_pred = model_rf.predict(test_x)\n",
    "\n",
    "# RMSE\n",
    "print('RMSE Train: %.2f, Test: %.2f' % (\n",
    "        mean_squared_error(train_y, train_y_pred, squared=False), # Train\n",
    "        mean_squared_error(test_y, test_y_pred, squared=False)    # test\n",
    "      ))\n",
    "\n",
    "# R2\n",
    "print('R^2 Train: %.2f, Test: %.2f' % (\n",
    "        r2_score(train_y, train_y_pred), # Train\n",
    "        r2_score(test_y, test_y_pred)    # Test\n",
    "      ))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cc52a559",
   "metadata": {
    "papermill": {
     "duration": 0.01916,
     "end_time": "2023-08-11T05:44:35.730744",
     "exception": false,
     "start_time": "2023-08-11T05:44:35.711584",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "### **Residual Plot Evaluation**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "f6e92934",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2023-08-11T05:44:35.770332Z",
     "iopub.status.busy": "2023-08-11T05:44:35.769958Z",
     "iopub.status.idle": "2023-08-11T05:44:36.213432Z",
     "shell.execute_reply": "2023-08-11T05:44:36.212211Z"
    },
    "papermill": {
     "duration": 0.466209,
     "end_time": "2023-08-11T05:44:36.215859",
     "exception": false,
     "start_time": "2023-08-11T05:44:35.749650",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Plotting predictions and residuals in train data\n",
    "plt.scatter(train_y_pred,\n",
    "            train_y_pred - train_y,\n",
    "            c='blue',\n",
    "            marker='o',\n",
    "            s=40,\n",
    "            alpha=0.7,\n",
    "            label='Train Data')\n",
    "\n",
    "\n",
    "# Plotting predictions and residuals in test data\n",
    "plt.scatter(test_y_pred,\n",
    "            test_y_pred - test_y,\n",
    "            c='red',\n",
    "            marker='o',\n",
    "            s=40,\n",
    "            alpha=0.7,\n",
    "            label='Test Data')\n",
    "\n",
    "# Configurate Style\n",
    "plt.xlabel('Predictions')\n",
    "plt.ylabel('Residuals')\n",
    "plt.legend(loc='upper left')\n",
    "plt.hlines(y=0, xmin=-20, xmax=60, lw=2, color='black')\n",
    "plt.xlim([-20, 60])\n",
    "plt.ylim([-50, 40])\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e6b85621",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.11"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 36.883922,
   "end_time": "2023-08-11T05:44:37.555927",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2023-08-11T05:44:00.672005",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
